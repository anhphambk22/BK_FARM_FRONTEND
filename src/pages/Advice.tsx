import { useState } from 'react';
import { Send, Sparkles, Volume2 } from 'lucide-react';

// C·∫•u tr√∫c tin nh·∫Øn
interface Message {
  role: 'user' | 'assistant';
  content: string;
}

// H√†m ƒë·ªçc gi·ªçng n√≥i ti·∫øng Vi·ªát
const speakText = (text: string) => {
  if (!('speechSynthesis' in window)) return;
  const utter = new SpeechSynthesisUtterance(text);
  utter.lang = 'vi-VN';
  utter.rate = 1.0;
  window.speechSynthesis.cancel();
  window.speechSynthesis.speak(utter);
};

export default function Advice() {
  const [messages, setMessages] = useState<Message[]>([
    {
      role: 'assistant',
      content:
        '**Xin ch√†o! üå± T√¥i l√† tr·ª£ l√Ω AI c·ªßa BK Farmers.**\n\nüëâ B·∫°n c√≥ th·ªÉ h·ªèi t√¥i: **‚ÄúKhi n√†o n√™n t∆∞·ªõi n∆∞·ªõc?‚Äù**, **‚ÄúL√†m sao tƒÉng nƒÉng su·∫•t?‚Äù**, **‚ÄúPh√≤ng tr·ª´ s√¢u b·ªánh?‚Äù** ho·∫∑c b·∫•t c·ª© ƒëi·ªÅu g√¨ v·ªÅ c√¢y tr·ªìng c·ªßa b·∫°n!'
    }
  ]);
  const [input, setInput] = useState('');

  const quickSuggestions = [
    'üåßÔ∏è Khi n√†o n√™n t∆∞·ªõi n∆∞·ªõc?',
    'üìà L√†m sao tƒÉng nƒÉng su·∫•t?',
    'üêõ Ph√≤ng tr·ª´ s√¢u b·ªánh?',
    'üåæ Th·ªùi ƒëi·ªÉm b√≥n ph√¢n?',
    '‚òÄÔ∏è ChƒÉm s√≥c theo m√πa?',
  ];

  const handleSend = (text: string) => {
    if (!text.trim()) return;

    setMessages((prev) => [...prev, { role: 'user', content: text }]);
    setInput('');

    setTimeout(() => {
      let response = '';
      const lower = text.toLowerCase();

      if (lower.includes('t∆∞·ªõi') || lower.includes('n∆∞·ªõc')) {
        response =
          '**üíß Khuy·∫øn ngh·ªã t∆∞·ªõi n∆∞·ªõc:**\n\n' +
          '‚Ä¢ ƒê·ªô ·∫©m ƒë·∫•t hi·ªán t·∫°i ~65% ‚Äì kh√° t·ªët!\n' +
          '‚Ä¢ T∆∞·ªõi v√†o s√°ng s·ªõm (5‚Äì7h) ho·∫∑c chi·ªÅu m√°t (16‚Äì18h)\n' +
          '‚Ä¢ 2‚Äì3 l·∫ßn/tu·∫ßn tu·ª≥ th·ªùi ti·∫øt\n' +
          '‚Ä¢ Tr√°nh t∆∞·ªõi gi·ªØa tr∆∞a n·∫Øng g·∫Øt';
      } else if (lower.includes('nƒÉng su·∫•t')) {
        response =
          '**üìà TƒÉng nƒÉng su·∫•t:**\n\n' +
          '1Ô∏è‚É£ Duy tr√¨ nhi·ªát ƒë·ªô 18‚Äì25¬∞C\n' +
          '2Ô∏è‚É£ ƒê·ªô ·∫©m KK 60‚Äì80%\n' +
          '3Ô∏è‚É£ B√≥n NPK ƒë√∫ng li·ªÅu\n' +
          '4Ô∏è‚É£ pH ƒë·∫•t 5.5‚Äì6.5\n' +
          '5Ô∏è‚É£ √Ånh s√°ng ƒë·ªß 6‚Äì8h/ng√†y\n' +
          'üëâ C√°c ch·ªâ s·ªë hi·ªán t·∫°i c·ªßa b·∫°n ƒë·ªÅu t·ªët, c·ª© ti·∫øp t·ª•c nh√© üåü';
      } else if (lower.includes('s√¢u') || lower.includes('b·ªánh')) {
        response =
          '**üêõ Ph√≤ng tr·ª´ s√¢u b·ªánh:**\n\n' +
          '‚úÖ Bi·ªán ph√°p sinh h·ªçc: d·∫ßu neem, t·ªèi, ·ªõt, b·∫´y ƒë√®n\n' +
          '‚ö†Ô∏è Thu·ªëc BVTV: ch·ªçn lo·∫°i sinh h·ªçc, phun ƒë√∫ng li·ªÅu, ƒë√∫ng l√∫c\n' +
          'üí° Hi·ªán t·∫°i m√¥i tr∆∞·ªùng c√¢y c·ªßa b·∫°n ƒëang kh·ªèe m·∫°nh!';
      } else if (lower.includes('ph√¢n') || lower.includes('b√≥n')) {
        response =
          '**üåæ H∆∞·ªõng d·∫´n b√≥n ph√¢n:**\n\n' +
          '‚Ä¢ N: 45 ppm ‚úÖ  P: 25 ppm ‚úÖ  K: 35 ppm ‚úÖ\n' +
          'üìÖ L·ªãch:\n' +
          '- Sinh tr∆∞·ªüng: NPK 16-16-8 (2 tu·∫ßn/l·∫ßn)\n' +
          '- Ra hoa: NPK 10-20-20\n' +
          '- K·∫øt tr√°i: NPK 5-10-15';
      } else if (lower.includes('m√πa') || lower.includes('th·ªùi ti·∫øt')) {
        response =
          '**‚òÄÔ∏è ChƒÉm s√≥c theo m√πa:**\n\n' +
          'üå∏ Xu√¢n: tƒÉng N, t∆∞·ªõi ƒë·ªÅu\n' +
          '‚òÄÔ∏è H√®: che n·∫Øng, t∆∞·ªõi s√°ng + chi·ªÅu\n' +
          'üçÇ Thu: gi·∫£m ƒë·∫°m, tƒÉng l√¢n/kali\n' +
          '‚ùÑÔ∏è ƒê√¥ng: gi·∫£m t∆∞·ªõi, tr√°nh √∫ng\n' +
          'üìÖ Th√°ng 10 ‚Äì s·∫Øp m√πa thu ho·∫°ch!';
      } else {
        response =
          '**üå± B·∫°n c√≥ th·ªÉ h·ªèi t√¥i v·ªÅ:**\n' +
          '‚Ä¢ C√°ch t∆∞·ªõi n∆∞·ªõc\n' +
          '‚Ä¢ TƒÉng nƒÉng su·∫•t\n' +
          '‚Ä¢ Ph√≤ng s√¢u b·ªánh\n' +
          '‚Ä¢ B√≥n ph√¢n, l·ªãch chƒÉm s√≥c\n\n' +
          'üí¨ H√£y m√¥ t·∫£ c·ª• th·ªÉ v·∫•n ƒë·ªÅ c·ªßa c√¢y tr·ªìng nh√©!';
      }

      setMessages((prev) => [...prev, { role: 'assistant', content: response }]);
    }, 800);
  };

  return (
    <div className="max-w-4xl mx-auto space-y-6">
      {/* === Ti√™u ƒë·ªÅ === */}
      <div className="text-center mb-8">
        <div className="flex justify-center items-center mb-4">
          <Sparkles className="w-8 h-8 text-yellow-500 animate-pulse mr-3" />
          <h1 className="text-4xl font-bold bg-gradient-to-r from-emerald-600 to-teal-600 bg-clip-text text-transparent">
            T∆∞ v·∫•n AI n√¥ng nghi·ªáp
          </h1>
          <Sparkles className="w-8 h-8 text-yellow-500 animate-pulse ml-3" />
        </div>
        <p className="text-slate-600 font-semibold">
          <strong>H·ªèi t√¥i b·∫•t c·ª© ƒëi·ªÅu g√¨</strong> v·ªÅ c√¢y tr·ªìng c·ªßa b·∫°n üåæ
        </p>
      </div>

      {/* === G·ª£i √Ω nhanh === */}
      <div className="bg-white rounded-3xl shadow-xl p-6 border border-gray-100">
        <div className="flex flex-wrap gap-2 mb-6 justify-center">
          {quickSuggestions.map((sug, i) => (
            <button
              key={i}
              onClick={() => handleSend(sug)}
              className="px-4 py-2 rounded-full font-semibold text-emerald-700 bg-gradient-to-r 
                         from-emerald-50 to-teal-50 border border-emerald-200 
                         hover:from-emerald-100 hover:to-teal-100 transition-all"
            >
              {sug}
            </button>
          ))}
        </div>

        {/* === Khung h·ªôi tho·∫°i === */}
        <div className="space-y-4 mb-6 max-h-[60vh] overflow-y-auto pr-2">
          {messages.map((msg, i) => (
            <div
              key={i}
              className={`flex items-start ${
                msg.role === 'assistant' ? 'justify-start' : 'justify-end'
              }`}
            >
              {/* Avatar l·ªõn cho AI */}
              {msg.role === 'assistant' && (
                <div className="w-16 h-16 rounded-full bg-emerald-100 mr-3 flex items-center justify-center text-3xl">
                  ü§ñ
                </div>
              )}
              <div
                className={`p-4 rounded-2xl max-w-[80%] leading-relaxed whitespace-pre-line ${
                  msg.role === 'user'
                    ? 'bg-gradient-to-r from-emerald-500 to-teal-500 text-white'
                    : 'bg-slate-50 border border-slate-200 text-slate-800'
                }`}
              >
                <p
                  className="font-medium"
                  dangerouslySetInnerHTML={{
                    __html: msg.content.replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>'),
                  }}
                ></p>
              </div>

              {/* N√∫t ƒë·ªçc ch·ªØ (TTS) ch·ªâ cho assistant */}
              {msg.role === 'assistant' && (
                <button
                  onClick={() => speakText(msg.content.replace(/\*\*/g, ''))}
                  className="ml-2 p-2 rounded-full hover:bg-emerald-50 transition"
                  title="ƒê·ªçc to"
                >
                  <Volume2 className="w-5 h-5 text-emerald-600" />
                </button>
              )}
            </div>
          ))}
        </div>

        {/* === √î nh·∫≠p tin nh·∫Øn === */}
        <div className="flex gap-2">
          <input
            type="text"
            value={input}
            onChange={(e) => setInput(e.target.value)}
            onKeyDown={(e) => e.key === 'Enter' && handleSend(input)}
            placeholder="Nh·∫≠p c√¢u h·ªèi c·ªßa b·∫°n..."
            className="flex-1 px-6 py-4 rounded-full border-2 border-emerald-200
                       focus:border-emerald-500 focus:outline-none
                       text-slate-800 placeholder-slate-400"
          />
          <button
            onClick={() => handleSend(input)}
            className="px-6 py-4 rounded-full bg-gradient-to-r from-emerald-500 to-teal-500
                       text-white font-semibold hover:from-emerald-600 hover:to-teal-600
                       transition-all duration-300 transform hover:scale-105 shadow-lg"
          >
            <Send className="w-5 h-5" />
          </button>
        </div>
      </div>
    </div>
  );
}
